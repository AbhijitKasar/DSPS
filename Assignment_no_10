#include <iostream>
#include <string>
using namespace std;

struct Music {
    string name;
    string alb_name;
    int year;
    Music *next;
};

Music *start = NULL;

void accept() {
    Music *newNode = new Music;
    cout << "\nEnter music details:";
    cout << "\nEnter name, album name, released year: ";
    cin >> newNode->name >> newNode->alb_name >> newNode->year;
    newNode->next = NULL;

    if (start == NULL) {
        start = newNode;
        newNode->next = start;
    } else {
        Music *temp = start;
        while (temp->next != start) {
            temp = temp->next;
        }
        temp->next = newNode;
        newNode->next = start;
    }
}

void display() {
    if (start == NULL) {
        cout << "\nNo music details to display.\n";
        return;
    }
    Music *temp = start;
    cout << "\nMusic Details:\n";
    do {
        cout << temp->name << "\t" << temp->alb_name << "\t" << temp->year << "\t" <<  "\n";
        temp = temp->next;
    } while (temp != start);
}

void update() {
    if (start == NULL) {
        cout << "\nNo music details to update.\n";
        return;
    }
    string title;
    cout << "\nEnter the name of the music to update: ";
    cin >> title;
    Music *temp = start;
    do {
        if (temp->name == title) {
            cout << "\nEnter new details (name, album name, year, duration): ";
            cin >> temp->name >> temp->alb_name >> temp->year;
            cout << "\nMusic details updated successfully.\n";
            return;
        }
        temp = temp->next;
    } while (temp != start);
    cout << "\nMusic not found.\n";
}

void remove() {
    if (start == NULL) {
        cout << "\nNo music details to remove.\n";
        return;
    }
    string title;
    cout << "\nEnter the name of the music to remove: ";
    cin >> title;

    Music *temp = start, *prev = NULL;

    if (start->name == title) {
        if (start->next == start) {
            delete start;
            start = NULL;
        } else {
            while (temp->next != start) {
                temp = temp->next;
            }
            temp->next = start->next;
            Music *toDelete = start;
            start = start->next;
            delete toDelete;
        }
        cout << "\nMusic removed successfully.\n";
        return;
    }

    prev = start;
    temp = start->next;
    do {
        if (temp->name == title) {
            prev->next = temp->next;
            delete temp;
            cout << "\nMusic removed successfully.\n";
            return;
        }
        prev = temp;
        temp = temp->next;
    } while (temp != start);

    cout << "\nMusic not found.\n";
}

void search() {
    if (start == NULL) {
        cout << "\nNo music details to search.\n";
        return;
    }
    string title;
    cout << "\nEnter the name of the music to search: ";
    cin >> title;
    Music *temp = start;
    do {
        if (temp->name == title) {
            cout << "\nMusic found: " << temp->name << "\t" << temp->alb_name << "\t" << temp->year << "\t" << "\n";
            return;
        }
        temp = temp->next;
    } while (temp != start);
    cout << "\nMusic not found.\n";
}

int main() {
    int choice;
    do {
        cout << "\n1. Add Music\n2. Display Music\n3. Update Music\n4. Remove Music\n5. Search Music\n6. Exit\nEnter your choice: ";
        cin >> choice;
        switch (choice) {
            case 1: 
                accept(); 
                break;
            case 2: 
                display(); 
                break;
            case 3: 
                update(); 
                break;
            case 4: 
                remove(); 
                break;
            case 5: 
                search(); 
                break;
            case 6: 
                cout << "\nExiting...\n"; 
                break;
            default: cout << "\nInvalid choice.\n";
        }
    } while (choice != 6);
    return 0;
}
